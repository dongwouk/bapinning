<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="ReviewMapper">

	<!-- 음식점 리뷰 목록 -->
	<select id="r_totalCount" resultType="int" parameterType="int">
		select count(*)
	  from restaurant_reviews
	  where res_id =#{res_id}
	</select>
	<select id="r_reviewList"  resultType="ReviewDTO" parameterType="int">
	  select review_id, res_id, user_id, rating, review_content, like_cnt, 
		  to_char(created_date, 'YYYY/MM/dd') as created_date, 
		  to_char(modified_date, 'YYYY/MM/dd') as modified_date, nickname
		FROM
    	restaurant_reviews rr
		JOIN
   	 member m ON rr.user_id = m.userid
	  where res_id =#{res_id}
	  order by review_id desc 
	</select>
	
	<!-- 숙소 리뷰 목록 -->
	<select id="l_totalCount" resultType="int" parameterType="int">
	  select count(*)
	  from lodging_reviews
	  where lodging_id =#{lodging_id}
	</select>
	<select id="l_reviewList"  resultType="LodReviewDTO" parameterType="int">
	  select review_id, lodging_id, user_id, rating, review_content, like_cnt,
	   	to_char(created_date, 'YYYY/MM/dd') as created_date, 
	  	to_char(modified_date, 'YYYY/MM/dd') as modified_date, nickname
		FROM
    	lodging_reviews lr
		JOIN
   	 member m ON lr.user_id = m.userid
	  where lodging_id =#{lodging_id}
	  order by review_id desc
	</select>
	
	<!-- 리뷰 등록 -->
	<insert id="reviewWrite" parameterType="ReviewDTO">
		insert into restaurant_reviews (review_id, res_id, user_id, rating, review_content)
		values (#{review_id}, #{res_id}, #{user_id}, #{rating}, #{review_content})
	</insert>
	<insert id="lodReviewWrite" parameterType="LodReviewDTO">
		insert into lodging_reviews (review_id, lodging_id, user_id, rating, review_content)
		values (#{review_id}, #{lodging_id}, #{user_id}, #{rating}, #{review_content})
	</insert>
	
	<!-- 리뷰 상세보기 -->
	<select id="reviewRetrieve" parameterType="string" resultType="ReviewDTO">
	  select review_id, res_id, user_id, rating, review_content, like_cnt, 
		  created_date, modified_date, nickname
		FROM
    	restaurant_reviews rr
		JOIN
   	 member m ON rr.user_id = m.userid
		where review_id = #{review_id}
	</select>
	<select id="lodReviewRetrieve" parameterType="string" resultType="LodReviewDTO">
	  select review_id, lodging_id, user_id, rating, review_content, like_cnt, 
		  created_date, modified_date, nickname
		FROM
			lodging_reviews lr
  	JOIN
   	 member m ON lr.user_id = m.userid
		where review_id = #{review_id}
	</select>
	
	<!-- 리뷰 수정 -->
	<update id="reviewUpdate" parameterType="ReviewDTO">
		update restaurant_reviews
		set review_content = #{review_content}, rating=#{rating}
		where review_id = #{review_id}
	</update>
	<update id="lodReviewUpdate" parameterType="LodReviewDTO">
		update lodging_reviews
		set review_content = #{review_content}, rating=#{rating}, modified_date = sysdate
		where review_id = #{review_id}
	</update>
	
	<!-- 리뷰 삭제 -->
	<delete id="reviewDelete" parameterType="int">
	  delete from restaurant_reviews
	  where review_id = #{review_id}
	</delete>
	<delete id="lodReviewDelete" parameterType="int">
	  delete from lodging_reviews
	  where review_id = #{review_id}
	</delete>
   

	<!-- 리뷰 이미지 업로드용 -->
	<select id="find_seq" resultType="int">
		select restaurant_reviews_seq.nextval 
		from dual
	</select>
	<select id="lod_find_seq" resultType="int">
		select lodging_reviews_seq.nextval 
		from dual
	</select>
	
	<insert id="save_url" parameterType="hashmap">
		insert into res_review_image
		values (#{review_id},#{url})
	</insert>
	<insert id="lod_save_url" parameterType="hashmap">
		insert into lod_review_image
		values (#{review_id},#{url})
	</insert>

	<select id="res_find_img" parameterType="int" resultType="string">
		select url from res_review_image
		where review_id=#{review_id}
	</select>
	<select id="lod_find_img" parameterType="int" resultType="string">
		select url from lod_review_image
		where review_id=#{review_id}
	</select>
	
	
	<!-- 리뷰 추천 -->
	<update id="res_like_cnt" parameterType="int">
		update restaurant_reviews
		set like_cnt = like_cnt + 1
		where review_id = #{review_id}
	</update>
	<update id="lod_like_cnt" parameterType="int">
		update lodging_reviews
		set like_cnt = like_cnt + 1
		where review_id = #{review_id}
	</update>
	
	<!-- 리뷰 추천시 like_review 테이블에 insert -->
	<insert id="insertLike">
		insert into like_review(userid, tb, review_id) 
		values(#{userid}, #{review_id})
	</insert>
</mapper>